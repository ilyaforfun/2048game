{"ast":null,"code":"var _jsxFileName = \"/Users/ilya/startup-2048/src/Startup2048.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { ArrowUp, ArrowDown, ArrowLeft, ArrowRight } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stages = ['Angel', 'Pre-seed', 'Seed', 'Series A', 'Series B', 'Series C', 'Series D', 'Pre-IPO', 'IPO', 'Exit'];\nconst getRandomStage = () => stages[Math.floor(Math.random() * 2)];\nconst createInitialBoard = () => {\n  const board = Array(4).fill().map(() => Array(4).fill(null));\n  const pos1 = Math.floor(Math.random() * 16);\n  let pos2 = Math.floor(Math.random() * 15);\n  pos2 = pos2 >= pos1 ? pos2 + 1 : pos2;\n  board[Math.floor(pos1 / 4)][pos1 % 4] = getRandomStage();\n  board[Math.floor(pos2 / 4)][pos2 % 4] = getRandomStage();\n  return board;\n};\n\n// Add this function outside of the Startup2048 component\nconst isGameOver = board => {\n  // Check for empty cells\n  for (let i = 0; i < 4; i++) {\n    for (let j = 0; j < 4; j++) {\n      if (!board[i][j]) return false;\n    }\n  }\n\n  // Check for possible merges\n  for (let i = 0; i < 4; i++) {\n    for (let j = 0; j < 4; j++) {\n      const currentValue = board[i][j];\n      if (i < 3 && currentValue === board[i + 1][j] || j < 3 && currentValue === board[i][j + 1]) {\n        return false;\n      }\n    }\n  }\n  return true; // No empty cells and no possible merges\n};\nconst Startup2048 = () => {\n  _s();\n  const [board, setBoard] = useState(createInitialBoard());\n  const [score, setScore] = useState(0);\n  const [gameWon, setGameWon] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [debugMessage, setDebugMessage] = useState('');\n  const moveBoard = useCallback(direction => {\n    if (gameOver) return;\n    setBoard(prevBoard => {\n      let newBoard = JSON.parse(JSON.stringify(prevBoard));\n      let changed = false;\n      let newScore = score;\n      const merge = row => {\n        const newRow = row.filter(cell => cell);\n        for (let i = 0; i < newRow.length - 1; i++) {\n          if (newRow[i] === newRow[i + 1]) {\n            const nextIndex = stages.indexOf(newRow[i]) + 1;\n            if (nextIndex < stages.length) {\n              newRow[i] = stages[nextIndex];\n              newRow.splice(i + 1, 1);\n              newScore += nextIndex + 1;\n              changed = true;\n              if (newRow[i] === 'Exit') {\n                setGameWon(true);\n              }\n            }\n          }\n        }\n        return newRow.concat(Array(4 - newRow.length).fill(null));\n      };\n      if (direction === 'left' || direction === 'right') {\n        newBoard = newBoard.map(row => {\n          const newRow = direction === 'left' ? merge(row) : merge(row.reverse()).reverse();\n          if (newRow.join() !== row.join()) changed = true;\n          return newRow;\n        });\n      } else {\n        for (let col = 0; col < 4; col++) {\n          let column = newBoard.map(row => row[col]);\n          column = direction === 'up' ? merge(column) : merge(column.reverse()).reverse();\n          for (let row = 0; row < 4; row++) {\n            if (newBoard[row][col] !== column[row]) changed = true;\n            newBoard[row][col] = column[row];\n          }\n        }\n      }\n      if (changed) {\n        const emptySpots = [];\n        newBoard.forEach((row, i) => {\n          row.forEach((cell, j) => {\n            if (!cell) emptySpots.push([i, j]);\n          });\n        });\n        if (emptySpots.length) {\n          const [newI, newJ] = emptySpots[Math.floor(Math.random() * emptySpots.length)];\n          newBoard[newI][newJ] = getRandomStage();\n        }\n        setScore(newScore);\n      }\n      console.log('Board after move:', newBoard);\n      console.log('Is game over?', isGameOver(newBoard));\n      return changed ? newBoard : prevBoard;\n    });\n  }, [score, gameOver]);\n  useEffect(() => {\n    const gameOverStatus = isGameOver(board);\n    console.log('useEffect - Is game over?', gameOverStatus);\n    setDebugMessage(`Is game over? ${gameOverStatus}`);\n    if (gameOverStatus) {\n      setGameOver(true);\n    }\n  }, [board]);\n  const forceCheckGameOver = () => {\n    const gameOverStatus = isGameOver(board);\n    console.log('Force check - Is game over?', gameOverStatus);\n    setDebugMessage(`Force check - Is game over? ${gameOverStatus}`);\n    setGameOver(gameOverStatus);\n  };\n  const getBackgroundColor = stage => {\n    const colors = {\n      'Angel': 'bg-blue-200',\n      'Pre-seed': 'bg-green-200',\n      'Seed': 'bg-yellow-200',\n      'Series A': 'bg-red-200',\n      'Series B': 'bg-purple-200',\n      'Series C': 'bg-indigo-200',\n      'Series D': 'bg-pink-200',\n      'Pre-IPO': 'bg-orange-200',\n      'IPO': 'bg-teal-200',\n      'Exit': 'bg-emerald-400'\n    };\n    return colors[stage] || 'bg-gray-100';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold mb-4\",\n      children: \"Startup 2048\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-300 p-4 rounded-lg\",\n      children: board.map((row, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: row.map((cell, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `w-24 h-24 m-1 flex items-center justify-center ${getBackgroundColor(cell)} rounded-lg shadow text-center text-sm font-semibold`,\n          children: cell || ''\n        }, j, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, this))\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), !gameWon && !gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 grid grid-cols-3 gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => moveBoard('left'),\n        className: \"p-2 bg-blue-500 text-white rounded\",\n        children: /*#__PURE__*/_jsxDEV(ArrowLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 100\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => moveBoard('up'),\n        className: \"p-2 bg-blue-500 text-white rounded\",\n        children: /*#__PURE__*/_jsxDEV(ArrowUp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 98\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => moveBoard('right'),\n        className: \"p-2 bg-blue-500 text-white rounded\",\n        children: /*#__PURE__*/_jsxDEV(ArrowRight, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 101\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => moveBoard('down'),\n        className: \"p-2 bg-blue-500 text-white rounded\",\n        children: /*#__PURE__*/_jsxDEV(ArrowDown, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 100\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 text-sm\",\n      children: debugMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: forceCheckGameOver,\n      className: \"mt-4 p-2 bg-red-500 text-white rounded\",\n      children: \"Check Game Over\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), gameOver && !gameWon && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 text-2xl font-bold text-red-600\",\n      children: \"Game Over! No more moves possible.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }, this), gameWon && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 text-2xl font-bold text-green-600\",\n      children: \"Congratulations! You've achieved a successful exit!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n_s(Startup2048, \"GRfTpos/wqzUzCfXphuuKux0YOU=\");\n_c = Startup2048;\nexport default Startup2048;\nvar _c;\n$RefreshReg$(_c, \"Startup2048\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","jsxDEV","_jsxDEV","stages","getRandomStage","Math","floor","random","createInitialBoard","board","Array","fill","map","pos1","pos2","isGameOver","i","j","currentValue","Startup2048","_s","setBoard","score","setScore","gameWon","setGameWon","gameOver","setGameOver","debugMessage","setDebugMessage","moveBoard","direction","prevBoard","newBoard","JSON","parse","stringify","changed","newScore","merge","row","newRow","filter","cell","length","nextIndex","indexOf","splice","concat","reverse","join","col","column","emptySpots","forEach","push","newI","newJ","console","log","gameOverStatus","forceCheckGameOver","getBackgroundColor","stage","colors","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/ilya/startup-2048/src/Startup2048.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { ArrowUp, ArrowDown, ArrowLeft, ArrowRight } from 'lucide-react';\n\nconst stages = ['Angel', 'Pre-seed', 'Seed', 'Series A', 'Series B', 'Series C', 'Series D', 'Pre-IPO', 'IPO', 'Exit'];\n\nconst getRandomStage = () => stages[Math.floor(Math.random() * 2)];\n\nconst createInitialBoard = () => {\n  const board = Array(4).fill().map(() => Array(4).fill(null));\n  const pos1 = Math.floor(Math.random() * 16);\n  let pos2 = Math.floor(Math.random() * 15);\n  pos2 = pos2 >= pos1 ? pos2 + 1 : pos2;\n  board[Math.floor(pos1 / 4)][pos1 % 4] = getRandomStage();\n  board[Math.floor(pos2 / 4)][pos2 % 4] = getRandomStage();\n  return board;\n};\n\n// Add this function outside of the Startup2048 component\nconst isGameOver = (board) => {\n  // Check for empty cells\n  for (let i = 0; i < 4; i++) {\n    for (let j = 0; j < 4; j++) {\n      if (!board[i][j]) return false;\n    }\n  }\n\n  // Check for possible merges\n  for (let i = 0; i < 4; i++) {\n    for (let j = 0; j < 4; j++) {\n      const currentValue = board[i][j];\n      if (\n        (i < 3 && currentValue === board[i + 1][j]) ||\n        (j < 3 && currentValue === board[i][j + 1])\n      ) {\n        return false;\n      }\n    }\n  }\n\n  return true; // No empty cells and no possible merges\n};\n\nconst Startup2048 = () => {\n  const [board, setBoard] = useState(createInitialBoard());\n  const [score, setScore] = useState(0);\n  const [gameWon, setGameWon] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [debugMessage, setDebugMessage] = useState('');\n\n  const moveBoard = useCallback((direction) => {\n    if (gameOver) return;\n\n    setBoard(prevBoard => {\n      let newBoard = JSON.parse(JSON.stringify(prevBoard));\n      let changed = false;\n      let newScore = score;\n\n      const merge = (row) => {\n        const newRow = row.filter(cell => cell);\n        for (let i = 0; i < newRow.length - 1; i++) {\n          if (newRow[i] === newRow[i + 1]) {\n            const nextIndex = stages.indexOf(newRow[i]) + 1;\n            if (nextIndex < stages.length) {\n              newRow[i] = stages[nextIndex];\n              newRow.splice(i + 1, 1);\n              newScore += nextIndex + 1;\n              changed = true;\n              if (newRow[i] === 'Exit') {\n                setGameWon(true);\n              }\n            }\n          }\n        }\n        return newRow.concat(Array(4 - newRow.length).fill(null));\n      };\n\n      if (direction === 'left' || direction === 'right') {\n        newBoard = newBoard.map(row => {\n          const newRow = direction === 'left' ? merge(row) : merge(row.reverse()).reverse();\n          if (newRow.join() !== row.join()) changed = true;\n          return newRow;\n        });\n      } else {\n        for (let col = 0; col < 4; col++) {\n          let column = newBoard.map(row => row[col]);\n          column = direction === 'up' ? merge(column) : merge(column.reverse()).reverse();\n          for (let row = 0; row < 4; row++) {\n            if (newBoard[row][col] !== column[row]) changed = true;\n            newBoard[row][col] = column[row];\n          }\n        }\n      }\n\n      if (changed) {\n        const emptySpots = [];\n        newBoard.forEach((row, i) => {\n          row.forEach((cell, j) => {\n            if (!cell) emptySpots.push([i, j]);\n          });\n        });\n        if (emptySpots.length) {\n          const [newI, newJ] = emptySpots[Math.floor(Math.random() * emptySpots.length)];\n          newBoard[newI][newJ] = getRandomStage();\n        }\n        setScore(newScore);\n      }\n\n      console.log('Board after move:', newBoard);\n      console.log('Is game over?', isGameOver(newBoard));\n\n      return changed ? newBoard : prevBoard;\n    });\n  }, [score, gameOver]);\n\n  useEffect(() => {\n    const gameOverStatus = isGameOver(board);\n    console.log('useEffect - Is game over?', gameOverStatus);\n    setDebugMessage(`Is game over? ${gameOverStatus}`);\n    if (gameOverStatus) {\n      setGameOver(true);\n    }\n  }, [board]);\n\n  const forceCheckGameOver = () => {\n    const gameOverStatus = isGameOver(board);\n    console.log('Force check - Is game over?', gameOverStatus);\n    setDebugMessage(`Force check - Is game over? ${gameOverStatus}`);\n    setGameOver(gameOverStatus);\n  };\n\n  const getBackgroundColor = (stage) => {\n    const colors = {\n      'Angel': 'bg-blue-200',\n      'Pre-seed': 'bg-green-200',\n      'Seed': 'bg-yellow-200',\n      'Series A': 'bg-red-200',\n      'Series B': 'bg-purple-200',\n      'Series C': 'bg-indigo-200',\n      'Series D': 'bg-pink-200',\n      'Pre-IPO': 'bg-orange-200',\n      'IPO': 'bg-teal-200',\n      'Exit': 'bg-emerald-400',\n    };\n    return colors[stage] || 'bg-gray-100';\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100\">\n      <h1 className=\"text-4xl font-bold mb-4\">Startup 2048</h1>\n      <div className=\"mb-4\">Score: {score}</div>\n      <div className=\"bg-gray-300 p-4 rounded-lg\">\n        {board.map((row, i) => (\n          <div key={i} className=\"flex\">\n            {row.map((cell, j) => (\n              <div key={j} className={`w-24 h-24 m-1 flex items-center justify-center ${getBackgroundColor(cell)} rounded-lg shadow text-center text-sm font-semibold`}>\n                {cell || ''}\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n      {!gameWon && !gameOver && (\n        <div className=\"mt-4 grid grid-cols-3 gap-2\">\n          <button onClick={() => moveBoard('left')} className=\"p-2 bg-blue-500 text-white rounded\"><ArrowLeft /></button>\n          <button onClick={() => moveBoard('up')} className=\"p-2 bg-blue-500 text-white rounded\"><ArrowUp /></button>\n          <button onClick={() => moveBoard('right')} className=\"p-2 bg-blue-500 text-white rounded\"><ArrowRight /></button>\n          <div></div>\n          <button onClick={() => moveBoard('down')} className=\"p-2 bg-blue-500 text-white rounded\"><ArrowDown /></button>\n        </div>\n      )}\n      <div className=\"mt-4 text-sm\">{debugMessage}</div>\n      <button \n        onClick={forceCheckGameOver} \n        className=\"mt-4 p-2 bg-red-500 text-white rounded\"\n      >\n        Check Game Over\n      </button>\n      {gameOver && !gameWon && (\n        <div className=\"mt-4 text-2xl font-bold text-red-600\">\n          Game Over! No more moves possible.\n        </div>\n      )}\n      {gameWon && (\n        <div className=\"mt-4 text-2xl font-bold text-green-600\">\n          Congratulations! You've achieved a successful exit!\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Startup2048;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}